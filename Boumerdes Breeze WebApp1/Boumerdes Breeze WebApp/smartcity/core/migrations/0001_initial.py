# Generated by Django 5.1.4 on 2024-12-20 21:38

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('numero_carte_identite', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TouristSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='tourist_spots/')),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Bus', 'Bus'), ('Taxi', 'Taxi'), ('Private Transfer', 'Private Transfer')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('route', models.CharField(max_length=255)),
                ('schedule', models.TextField()),
                ('fare', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('superadmin', 'Super Admin'), ('auberge_admin', 'Auberge Admin'), ('hotel_admin', 'Hotel Admin'), ('complexe_admin', 'Complexe Admin'), ('transport_admin', 'Transport Admin')], default='auberge_admin', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('manage_auberge', 'Can manage assigned auberge'), ('manage_hotel', 'Can manage assigned hotel'), ('manage_complexe', 'Can manage assigned complexe'), ('manage_transport', 'Can manage assigned transport')],
            },
        ),
        migrations.CreateModel(
            name='Auberge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('maison', 'Maison'), ('camp', 'Camp')], max_length=10)),
                ('capacite', models.IntegerField()),
                ('nom', models.CharField(max_length=255)),
                ('emplacement', models.CharField(blank=True, max_length=255, null=True)),
                ('adresse', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=20)),
                ('nbr_personne_reserve', models.IntegerField(default=0)),
                ('disponibilite', models.BooleanField(default=True)),
                ('image_list', models.JSONField(default=list)),
                ('offres', models.JSONField(default=list)),
                ('features', models.TextField(blank=True, help_text='Comma-separated list of features')),
                ('stars', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auberge', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('change_own_auberge', 'Can change own auberge')],
            },
        ),
        migrations.CreateModel(
            name='Complexe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('stars', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('price_range', models.CharField(choices=[('$', '$'), ('$$', '$$'), ('$$$', '$$$'), ('$$$$', '$$$$'), ('$$$$$', '$$$$$')], max_length=5)),
                ('image', models.ImageField(upload_to='complexes/')),
                ('area', models.CharField(blank=True, max_length=50)),
                ('facilities', models.TextField(blank=True, help_text='Comma-separated list of facilities')),
                ('accommodation_types', models.CharField(blank=True, max_length=255)),
                ('suitable_for', models.CharField(blank=True, max_length=255)),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complexe', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('change_own_complexe', 'Can change own complexe')],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('stars', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('price_range', models.CharField(choices=[('$', '$'), ('$$', '$$'), ('$$$', '$$$'), ('$$$$', '$$$$'), ('$$$$$', '$$$$$')], max_length=5)),
                ('image', models.ImageField(upload_to='hotels/')),
                ('amenities', models.TextField(blank=True, help_text='Comma-separated list of amenities')),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('change_own_hotel', 'Can change own hotel')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auberge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.auberge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('complexe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.complexe')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='user_uploads/')),
                ('auberge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.auberge')),
                ('complexe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.complexe')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField()),
                ('num_rooms', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True, null=True)),
                ('nature_reservation', models.CharField(choices=[('Gratuit', 'Gratuit'), ('Non Gratuit', 'Non Gratuit')], max_length=15)),
                ('restauration_montant', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('auberge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.auberge')),
                ('complexe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.complexe')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=255)),
                ('sexe', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=5)),
                ('numero_carte_identite', models.CharField(max_length=50, unique=True)),
                ('permission_parentale', models.BooleanField(default=False)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('auberge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.auberge')),
                ('complexe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.complexe')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'auberge', 'hotel', 'complexe')},
            },
        ),
        migrations.CreateModel(
            name='AubergeResident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('auberge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.auberge')),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.resident')),
            ],
            options={
                'unique_together': {('auberge', 'resident')},
            },
        ),
    ]
